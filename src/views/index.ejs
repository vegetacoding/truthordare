<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Thật hay Thách - Game Mode</title>
    <link
      href="https://fonts.googleapis.com/css2?family=Poppins:wght@300;400;600&display=swap"
      rel="stylesheet"
    />
    <style>
      :root {
        --primary-color: #6a11cb;
        --secondary-color: #2575fc;
        --background-gradient: linear-gradient(
          135deg,
          #6a11cb 0%,
          #2575fc 100%
        );
        --card-background: rgba(255, 255, 255, 0.9);
        --text-color: #333;
        --accent-color: #ff6b6b;
      }

      * {
        margin: 0;
        padding: 0;
        box-sizing: border-box;
      }

      body {
        font-family: "Poppins", sans-serif;
        background: var(--background-gradient);
        min-height: 100vh;
        display: flex;
        justify-content: center;
        align-items: center;
        perspective: 1000px;
        overflow: hidden;
      }

      body::before {
        content: "";
        position: absolute;
        top: -50%;
        left: -50%;
        width: 200%;
        height: 200%;
        background: rgba(255, 255, 255, 0.05);
        transform: rotate(-45deg);
        z-index: -1;
      }

      .container {
        background: var(--card-background);
        border-radius: 20px;
        box-shadow: 0 20px 50px rgba(0, 0, 0, 0.1);
        padding: 40px;
        width: 100%;
        max-width: 500px;
        transform: rotateX(10deg) scale(0.9);
        opacity: 0;
        animation: fadeInSlide 0.8s forwards;
        backdrop-filter: blur(10px);
        border: 1px solid rgba(255, 255, 255, 0.2);
      }

      @keyframes fadeInSlide {
        to {
          transform: rotateX(0) scale(1);
          opacity: 1;
        }
      }

      h1 {
        text-align: center;
        color: var(--primary-color);
        margin-bottom: 30px;
        font-size: 2.5rem;
        letter-spacing: -1px;
        background: linear-gradient(
          to right,
          var(--primary-color),
          var(--secondary-color)
        );
        -webkit-background-clip: text;
        -webkit-text-fill-color: transparent;
      }

      .mode-selection {
        display: flex;
        flex-direction: column;
        gap: 20px;
        margin-bottom: 30px;
        align-items: stretch;
      }

      .mode-btn {
        display: flex;
        align-items: center;
        justify-content: center;
        gap: 15px;
        padding: 15px 25px;
        background: rgba(106, 17, 203, 0.1);
        color: var(--primary-color);
        text-decoration: none;
        border-radius: 10px;
        font-size: 1rem;
        font-weight: 600;
        text-transform: uppercase;
        letter-spacing: 1px;
        cursor: pointer;
        transition: all 0.3s ease;
        border: 2px solid transparent;
      }

      .mode-btn svg {
        width: 24px;
        height: 24px;
        stroke: var(--primary-color);
        stroke-width: 2;
      }

      .mode-btn.selected {
        background: var(--primary-color);
        color: white;
        border-color: var(--secondary-color);
        box-shadow: 0 10px 20px rgba(106, 17, 203, 0.3);
      }

      .mode-btn.selected svg {
        stroke: white;
      }

      .mode-btn:hover {
        background: rgba(106, 17, 203, 0.2);
      }

      .player-inputs {
        display: none;
        flex-direction: column;
        gap: 15px;
        margin-bottom: 20px;
      }

      .player-inputs.active {
        display: flex;
      }

      .player-input {
        display: flex;
        align-items: center;
        gap: 15px;
        position: relative;
      }

      .player-input label {
        flex-shrink: 0;
        width: 120px;
        text-align: right;
        color: var(--primary-color);
        font-weight: 600;
      }

      .player-input input {
        flex-grow: 1;
        padding: 12px 15px;
        border: 2px solid transparent;
        border-radius: 10px;
        background: rgba(255, 255, 255, 0.8);
        transition: all 0.3s ease;
        font-size: 1rem;
      }

      .player-input input:focus {
        outline: none;
        border-color: var(--primary-color);
        box-shadow: 0 0 0 3px rgba(106, 17, 203, 0.1);
      }

      .btn-group {
        display: none;
        justify-content: space-between;
        align-items: center;
      }

      .btn-group.active {
        display: flex;
      }

      .btn {
        display: inline-block;
        padding: 12px 25px;
        background: var(--primary-color);
        color: white;
        text-decoration: none;
        border-radius: 10px;
        font-size: 1rem;
        font-weight: 600;
        text-transform: uppercase;
        letter-spacing: 1px;
        cursor: pointer;
        transition: all 0.3s ease;
        border: none;
        box-shadow: 0 10px 20px rgba(106, 17, 203, 0.3);
      }

      .btn:hover {
        transform: translateY(-3px);
        box-shadow: 0 15px 25px rgba(106, 17, 203, 0.4);
      }

      .btn-add {
        background: transparent;
        color: var(--primary-color);
        border: 2px solid var(--primary-color);
        margin-right: 10px;
      }

      .btn-add:hover {
        background: var(--primary-color);
        color: white;
      }

      .error {
        color: var(--accent-color);
        text-align: center;
        margin-bottom: 15px;
        font-size: 0.9rem;
      }

      @media (max-width: 480px) {
        .container {
          margin: 20px;
          padding: 30px 20px;
        }
        .player-input {
          flex-direction: column;
          align-items: stretch;
        }
        .player-input label {
          text-align: left;
          margin-bottom: 5px;
        }
      }

      .logo {
        display: flex;
        justify-content: center;
        margin-bottom: 0px;
      }

      .game-logo {
        width: 100px;
        height: 100px;
        filter: drop-shadow(0 10px 15px rgba(0, 0, 0, 0.2));
        transition: transform 0.3s ease;
      }

      .game-logo:hover {
        transform: scale(1.1) rotate(5deg);
      }
    </style>
  </head>
  <body>
    <div class="container">
      <div>
        <div class="logo">
          <svg
            xmlns="http://www.w3.org/2000/svg"
            viewBox="0 0 100 100"
            class="game-logo"
          >
            <defs>
              <linearGradient
                id="logoGradient"
                x1="0%"
                y1="0%"
                x2="100%"
                y2="100%"
              >
                <stop
                  offset="0%"
                  style="stop-color: var(--primary-color); stop-opacity: 1"
                />
                <stop
                  offset="100%"
                  style="stop-color: var(--secondary-color); stop-opacity: 1"
                />
              </linearGradient>
            </defs>
            <path
              d="M50 10 L75 40 Q85 50, 75 60 L50 90 L25 60 Q15 50, 25 40 Z"
              fill="url(#logoGradient)"
              stroke="white"
              stroke-width="3"
            />
            <text
              x="50"
              y="55"
              text-anchor="middle"
              font-size="20"
              font-weight="bold"
              fill="white"
            >
              T/D
            </text>
          </svg>
        </div>
        <h1>Thật hay Thách</h1>
      </div>

      <div class="mode-selection">
        <button class="mode-btn" data-mode="friends" onclick="selectMode(this)">
          <svg
            xmlns="http://www.w3.org/2000/svg"
            viewBox="0 0 24 24"
            fill="none"
            stroke="currentColor"
            stroke-width="2"
            stroke-linecap="round"
            stroke-linejoin="round"
          >
            <path d="M17 21v-2a4 4 0 0 0-4-4H5a4 4 0 0 0-4 4v2" />
            <circle cx="9" cy="7" r="4" />
            <path d="M23 21v-2a4 4 0 0 0-3-3.87" />
            <path d="M16 3.13a4 4 0 0 1 0 7.75" />
          </svg>
          Bạn Bè
        </button>
        <button class="mode-btn" data-mode="couple" onclick="selectMode(this)">
          <svg
            xmlns="http://www.w3.org/2000/svg"
            viewBox="0 0 24 24"
            fill="none"
            stroke="currentColor"
            stroke-width="2"
            stroke-linecap="round"
            stroke-linejoin="round"
          >
            <path
              d="M9 19c-5 1.5-5-2.5-7-3m14 5v-3.5c0-1 .1-1.4-.5-2 2.8-.3 5.5-1.4 5.5-6a4.6 4.6 0 0 0-1.3-3.2 4.2 4.2 0 0 0-.1-3.2s-1.1-.3-3.5 1.3a12.3 12.3 0 0 0-6.2 0C6.5 2.8 5.4 3.1 5.4 3.1a4.2 4.2 0 0 0-.1 3.2A4.6 4.6 0 0 0 4 9.5c0 4.6 2.7 5.7 5.5 6-.6.6-.6 1.2-.5 2V21"
            />
            <path d="M9 19c-4.3 1.4-4.3-2.5-6-3" />
          </svg>
          Cặp Đôi
        </button>
        <button class="mode-btn" data-mode="party" onclick="selectMode(this)">
          <svg
            xmlns="http://www.w3.org/2000/svg"
            viewBox="0 0 24 24"
            fill="none"
            stroke="currentColor"
            stroke-width="2"
            stroke-linecap="round"
            stroke-linejoin="round"
          >
            <path d="M18 8h1a4 4 0 0 1 0 8h-1" />
            <path d="M2 8h16v9a4 4 0 0 1-4 4H6a4 4 0 0 1-4-4V8z" />
            <line x1="6" y1="1" x2="6" y2="4" />
            <line x1="10" y1="1" x2="10" y2="4" />
            <line x1="14" y1="1" x2="14" y2="4" />
          </svg>
          Buổi Tiệc
        </button>
      </div>

      <form id="playerSetupForm" action="/start-game" method="POST">
        <input type="hidden" id="selectedMode" name="mode" value="" required />
        <div class="player-inputs" id="playerInputs">
          <div class="player-input">
            <label for="player1">Người chơi 1:</label>
            <input
              type="text"
              id="player1"
              name="players[]"
              required
              placeholder="Nhập tên người chơi"
            />
          </div>
          <div class="player-input">
            <label for="player2">Người chơi 2:</label>
            <input
              type="text"
              id="player2"
              name="players[]"
              required
              placeholder="Nhập tên người chơi"
            />
          </div>
        </div>
        <div id="errorMessage" class="error"></div>
        <div class="btn-group">
          <button
            type="button"
            onclick="addPlayer()"
            class="btn btn-add"
            id="addPlayerBtn"
          >
            + Thêm Người Chơi
          </button>
          <button type="submit" class="btn" id="startGameBtn" disabled>
            Bắt Đầu
          </button>
        </div>
      </form>
    </div>

    <script>
      const playerInputs = document.getElementById("playerInputs");
      const errorMessage = document.getElementById("errorMessage");
      const addPlayerBtn = document.getElementById("addPlayerBtn");
      const startGameBtn = document.getElementById("startGameBtn");
      const selectedModeInput = document.getElementById("selectedMode");
      const btnGroup = document.querySelector(".btn-group");
      let playerCount = 2;
      let selectedMode = null;

      function selectMode(btn) {
        // Remove selected class from all mode buttons
        document
          .querySelectorAll(".mode-btn")
          .forEach((b) => b.classList.remove("selected"));

        // Add selected class to clicked button
        btn.classList.add("selected");

        // Store selected mode
        selectedMode = btn.dataset.mode;
        selectedModeInput.value = selectedMode;

        // Show player inputs and button group
        playerInputs.classList.add("active");
        btnGroup.classList.add("active");

        // Reset player inputs based on mode
        resetPlayerInputs();
      }

      function resetPlayerInputs() {
        // Reset player inputs
        while (playerInputs.children.length > 2) {
          playerInputs.lastChild.remove();
        }
        playerCount = 2;

        // Mode-specific player count validation
        if (selectedMode === "friends" || selectedMode === "couple") {
          // Disable add player button
          addPlayerBtn.disabled = true;
          startGameBtn.disabled = false;
        } else if (selectedMode === "party") {
          // Allow adding more players
          addPlayerBtn.disabled = false;
          startGameBtn.disabled = true;
        }
      }

      function validatePlayerCount() {
        // Reset error and enable/disable buttons
        errorMessage.textContent = "";

        // Mode-specific player count validation
        if (selectedMode === "friends" || selectedMode === "couple") {
          // Only allow 2 players
          if (playerCount > 2) {
            while (playerCount > 2) {
              playerInputs.lastChild.remove();
              playerCount--;
            }
            addPlayerBtn.disabled = true;
          }
          if (playerCount === 2) {
            startGameBtn.disabled = false;
          }
        } else if (selectedMode === "party") {
          // Allow 3-10 players
          addPlayerBtn.disabled = playerCount >= 10;
          startGameBtn.disabled = playerCount < 3;
        }
      }

      function addPlayer() {
        if (selectedMode === null) {
          errorMessage.textContent = "Vui lòng chọn chế độ chơi trước";
          return;
        }

        if (selectedMode === "friends" || selectedMode === "couple") {
          if (playerCount >= 2) {
            errorMessage.textContent = `Chế độ ${
              selectedMode === "friends" ? "Bạn Bè" : "Cặp Đôi"
            } chỉ hỗ trợ 2 người chơi`;
            return;
          }
        } else if (playerCount >= 10) {
          errorMessage.textContent = "Tối đa 10 người chơi";
          addPlayerBtn.disabled = true;
          return;
        }

        playerCount++;
        const newPlayerDiv = document.createElement("div");
        newPlayerDiv.classList.add("player-input");
        newPlayerDiv.innerHTML = `
          <label for="player${playerCount}">Người chơi ${playerCount}:</label>
          <input type="text" id="player${playerCount}" name="players[]" required placeholder="Nhập tên người chơi">
        `;
        playerInputs.appendChild(newPlayerDiv);

        // Revalidate player count
        validatePlayerCount();
      }

      playerSetupForm.addEventListener("submit", function (event) {
        const inputs = document.querySelectorAll('input[name="players[]"]');
        const playerNames = Array.from(inputs).map((input) =>
          input.value.trim()
        );

        // Check for unique names
        const uniqueNames = new Set(playerNames);
        if (uniqueNames.size !== playerNames.length) {
          event.preventDefault();
          errorMessage.textContent = "Tên người chơi phải khác nhau";
          return;
        }

        // Check for empty names
        if (playerNames.some((name) => name === "")) {
          event.preventDefault();
          errorMessage.textContent = "Tất cả người chơi phải có tên";
          return;
        }
      });
    </script>
  </body>
</html>
